// Описание структур
struct Car {
    var brand: String
    var year: Int
    var trunkVolume: Double
    var isEngineRunning: Bool
    var areWindowsOpen: Bool
    var filledTrunkVolume: Double

    mutating func performAction(action: CarAction) {
        switch action {
        case .startEngine:
            isEngineRunning = true
        case .stopEngine:
            isEngineRunning = false
        case .openWindows:
            areWindowsOpen = true
        case .closeWindows:
            areWindowsOpen = false
        case .loadTrunk(let volume):
            filledTrunkVolume += volume
        case .unloadTrunk(let volume):
            filledTrunkVolume -= volume
        }
    }
}

struct Truck {
    var brand: String
    var year: Int
    var cargoVolume: Double
    var isEngineRunning: Bool
    var areWindowsOpen: Bool
    var filledCargoVolume: Double

    mutating func performAction(action: TruckAction) {
        switch action {
        case .startEngine:
            isEngineRunning = true
        case .stopEngine:
            isEngineRunning = false
        case .openWindows:
            areWindowsOpen = true
        case .closeWindows:
            areWindowsOpen = false
        case .loadCargo(let volume):
            filledCargoVolume += volume
        case .unloadCargo(let volume):
            filledCargoVolume -= volume
        }
    }
}

// Перечисление с возможными действиями с автомобилем
enum CarAction {
    case startEngine
    case stopEngine
    case openWindows
    case closeWindows
    case loadTrunk(volume: Double)
    case unloadTrunk(volume: Double)
}

enum TruckAction {
    case startEngine
    case stopEngine
    case openWindows
    case closeWindows
    case loadCargo(volume: Double)
    case unloadCargo(volume: Double)
}

// Инициализация экземпляров структур и применение различных действий
var car = Car(brand: "Toyota", year: 2020, trunkVolume: 500.0, isEngineRunning: false, areWindowsOpen: false, filledTrunkVolume: 0.0)
var truck = Truck(brand: "Volvo", year: 2018, cargoVolume: 3000.0, isEngineRunning: false, areWindowsOpen: false, filledCargoVolume: 0.0)

car.performAction(action: .startEngine)
car.performAction(action: .openWindows)
car.performAction(action: .loadTrunk(volume: 200.0))

truck.performAction(action: .startEngine)
truck.performAction(action: .loadCargo(volume: 1500.0))

// Положить объекты структур в словарь
var vehicleDict: [String: Any] = [:]
vehicleDict["ToyotaCar"] = car
vehicleDict["VolvoTruck"] = truck
